<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <link rel="stylesheet" href="./css/style.css" />
    <script
      src="https://kit.fontawesome.com/7577eba8ec.js"
      crossorigin="anonymous"
    ></script>
    <script src="https://cdn.jsdelivr.net/npm/p5@0.10.2/lib/p5.js"></script>
    <link
      href="https://fonts.googleapis.com/css?family=Montserrat&display=swap"
      rel="stylesheet"
    />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />
    <title>Company Analysis Tool</title>
  </head>
  <body>
    <div class="container-home">
      <header>
        <div class="cat">
          <h4><a href="/">Company Analysis Tool</a></h4>
        </div>
        <div class="nav-links">
          <div class="ch-link"><a href="companies">Companies House</a></div>
          <div class="oc-link">
            <a href="opencorporates">Open Corporates</a>
          </div>
          <div class="dd-link"><a href="duedil">DueDil</a></div>
          <div>
            <a href="database">Database</a>
          </div>
        </div>
      </header>

      <div class="mobile-nav">
        <div class="mobile-logo">COMPANY ANALYSIS TOOL</div>
        <div class="menu-toggle">MENU</div>
      </div>

      <div class="mobile-navlinks">
        <div class="close">CLOSE</div>
        <ul>
          <li><a href="/">Home</a></li>
          <li><a href="companies">Companies House</a></li>
          <li><a href="opencorporates">Open Corporates</a></li>
          <li><a href="duedil">DueDil</a></li>
          <li><a href="database">Database</a></li>
        </ul>
      </div>

      <div class="home-image">
        <img src="/images/scraper-art.png" alt="" />
      </div>

      <div class="mobile-image">
        <img class="pattern" src="./images/pattern.png" alt="" />
        <img class="roto" src="./images/circle.png" alt="" />
      </div>

      <h2 class="welcome">
        Gather company registration, ownership and nature of business details
        from multiple sources.
      </h2>

      <% if (isLogged){ %>
      <div class="call-to-action">
        <a href="/users/dashboard">Dashboard</a>
      </div>

      <% }else{ %>
      <div class="call-to-action">
        <a href="/users/login">Sign In</a>
      </div>
      <% } %>
    </div>

    <section class="news-section">
      <h2 class="news-title">Financial Crime News</h2>

      <div class="news-container">
        <ul class="news"></ul>
      </div>
      <div class="tabs">
        <div class="first">First</div>
        <div class="previous">Previous</div>
        <div class="next">Next</div>
        <div class="last">Last</div>
      </div>

      <footer>
        <p>Â© Conor Bailey</p>
      </footer>
    </section>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.2.4/gsap.min.js"></script>
    <script>
      gsap.from(".home-image", { duration: 1, x: 200, opacity: 0 });
      gsap.from(".welcome", { duration: 1, y: 100, opacity: 0, delay: 0.5 });
      gsap.from(".call-to-action", {
        duration: 1,
        y: 100,
        opacity: 0,
        delay: 0.8,
      });

      gsap.from(".mobile-image", {
        duration: 1,
        x: -300,
        opacity: 0,
        delay: 0.9,
      });
    </script>
    <script src="./js/app.js"></script>
    <script>
      const apiKey = "cc3bf21c2493409384397d4ec4357b90";
      const newsList = document.querySelector(".news");
      const first = document.querySelector(".first");
      const previous = document.querySelector(".previous");
      const next = document.querySelector(".next");
      const last = document.querySelector(".last");
      const newsContainer = document.querySelector(".news-container");

      let url = `https://newsapi.org/v2/everything?q="financial crime"&apiKey=${apiKey}`;

      let newsArray = [];
      let page = 0;

      fetch(url)
        .then((response) => {
          if (response.status !== 200) {
            console.log(
              "Looks like there was a problem. Status Code: " + response.status
            );
            return;
          }

          // Examine the text in the response
          response.json().then((data) => {
            console.log(data.articles);
            data.articles.forEach((article, index) => {
              let li = document.createElement("li");
              let a = document.createElement("a");
              a.setAttribute("href", `${article.url}`);
              a.setAttribute("target", "_blank");
              a.textContent = `${index + 1}: ${article.title}`;
              li.appendChild(a);
              newsArray.push(li);
              //   newsList.appendChild(li);
            });
            listArticles();
          });
        })
        .catch((err) => {
          console.log("Fetch Error :-S", err);
        });

      function listArticles() {
        for (let i = 0; i < page + 5; i++) {
          newsList.appendChild(newsArray[i]);
        }
      }

      first.addEventListener("click", () => {
        page = 0;
        newsList.innerHTML = "";
        for (i = 0; i < 5; i++) {
          newsList.append(newsArray[i]);
        }
      });

      previous.addEventListener("click", () => {
        page == 0 ? (page = newsArray.length - 5) : (page -= 5);
        newsList.innerHTML = "";
        for (i = page; i < page + 5; i++) {
          newsList.append(newsArray[i]);
        }
      });

      next.addEventListener("click", () => {
        page == newsArray.length - 5 ? (page = 0) : (page += 5);
        newsList.innerHTML = "";
        for (i = page; i < page + 5; i++) {
          newsList.append(newsArray[i]);
        }
      });

      last.addEventListener("click", () => {
        page = newsArray.length - 5;
        newsList.innerHTML = "";
        for (i = page; i < page + 5; i++) {
          newsList.append(newsArray[i]);
        }
      });
    </script>
  </body>
</html>
